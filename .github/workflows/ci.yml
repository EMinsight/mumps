name: ci

env:
  HOMEBREW_NO_INSTALL_CLEANUP: 1
  CMAKE_GENERATOR: Ninja
  CTEST_NO_TESTS_ACTION: error

on:
  push:
    paths:
      - "**.c"
      - "**.f"
      - "**.F"
      - "**.f90"
      - "**.F90"
      - "**.cmake"
      - "**.txt"
      - ".github/workflows/ci.yml"
      - "!scripts/*"

jobs:

  core:
    timeout-minutes: 15

    strategy:
      matrix:
        scotch: [false]
        metis: [false]
        int64: [true, false]
        shared: [true, false]
        img: [ {os: ubuntu-latest, cmd: sudo apt update && sudo apt install --no-install-recommends ninja-build libopenmpi-dev openmpi-bin liblapack-dev libscalapack-mpi-dev},
               {os: macos-latest, cmd: brew install ninja lapack scalapack open-mpi && brew reinstall gcc}
        ]
        exclude:
          - shared: true
            img: {os: macos-latest}
          - shared: true
            int64: true
          # exclude shared: just saving ci resources
        include:
          - scotch: true
            shared: false
            int64: false
            img: {os: ubuntu-latest, cmd: sudo apt update && sudo apt install --no-install-recommends ninja-build libopenmpi-dev openmpi-bin liblapack-dev libscalapack-mpi-dev}
          - metis: true
            shared: false
            int64: false
            img: {os: ubuntu-latest, cmd: sudo apt update && sudo apt install --no-install-recommends ninja-build libopenmpi-dev openmpi-bin liblapack-dev libscalapack-mpi-dev}

    runs-on: ${{ matrix.img.os }}

    steps:

    - name: Install prereqs
      run: ${{ matrix.img.cmd }}

    - uses: actions/checkout@v3

    - name: Build METIS
      if: ${{ matrix.metis }}
      run: cmake -Dprefix:PATH=${{ runner.temp }} -P scripts/build_metis.cmake

    - name: Build scotch
      if: ${{ matrix.scotch }}
      run: cmake -Dprefix:PATH=${{ runner.temp }} -P scripts/build_scotch.cmake

    - name: configure int64=${{ matrix.int64 }} shared=${{ matrix.shared }}
      run: >-
        cmake
        --preset default
        -DCMAKE_PREFIX_PATH=${{ runner.temp }}
        -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}
        -Dscotch:BOOL=${{ matrix.scotch }}
        -Dmetis:BOOL=${{ matrix.metis }}
        -DBUILD_SHARED_LIBS:BOOL=${{ matrix.shared }}
        -Dintsize64:BOOL=${{ matrix.int64 }}

    - name: build, test release
      run: cmake --workflow --preset default

    - name: install package
      run: cmake --install build

    - name: configure example
      run: cmake -S example -B example/build -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }}

    - name: build example
      run: cmake --build example/build

    - name: test example
      run: ctest --test-dir example/build -V

    - name: Scotch example
      if: ${{ matrix.scotch }}
      run: |
        cmake -S example/scotch -Bexample/scotch/build -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }}
        cmake --build example/scotch/build
        ctest --test-dir example/scotch/build

    - name: print config log
      if: ${{ failure() && matrix.scotch }}
      run: |
        cat example/scotch/build/CMakeFiles/CMakeError.log

    - name: METIS example
      if: ${{ matrix.metis }}
      run: |
        cmake -S example/metis -Bexample/metis/build -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }}
        cmake --build example/metis/build
        ctest --test-dir example/metis/build

    - name: print config log
      if: ${{ failure() && matrix.metis }}
      run: |
        cat example/metis/build/CMakeFiles/CMakeError.log



  linux-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install prereqs
      run: |
        sudo apt update
        sudo apt install --no-install-recommends ninja-build libopenmpi-dev openmpi-bin

    - name: configure lapack, scalapack
      run: >-
        cmake -S scripts -B scripts/build
        -DBUILD_SINGLE:BOOL=false -DBUILD_DOUBLE:BOOL=true -DBUILD_COMPLEX:BOOL=false -DBUILD_COMPLEX16:BOOL=false
        --install-prefix=${{ runner.temp }}

    - name: build,install lapack, scalapack
      run: cmake --build scripts/build -t scalapack

    - name: configure
      run: cmake --preset default --install-prefix=${{ runner.temp }} -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }}

    - name: build, test release
      run: cmake --workflow --preset default

    - run: cmake --install build

# builds fine on local machine
    # - name: configure example
    #   run: cmake -S example -B example/build -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }} -DBUILD_SHARED_LIBS:BOOL=${{ matrix.shared }}
    # - name: build example
    #   run: cmake --build example/build
    # - name: test example
    #   run: ctest --test-dir example/build -V
