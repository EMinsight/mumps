# https://oneapi-src.github.io/oneapi-ci/
# https://github.com/oneapi-src/oneapi-ci/blob/master/.github/workflows/list_components.yml

name: oneapi-windows

env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18969/w_BaseKit_p_2022.3.1.19798.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18976/w_HPCKit_p_2022.3.1.19755.exe
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-compiler
  WINDOWS_FORTRAN_COMPONENTS: intel.oneapi.win.ifort-compiler
  WINDOWS_MKL_COMPONENTS: intel.oneapi.win.mkl.devel
  WINDOWS_MPI_COMPONENTS: intel.oneapi.win.mpi.devel
  CC: icx
  CXX: icx
  FC: ifx
  # Release is necessary to avoid ITERATOR_DEBUG_LEVEL mismatch with libstdc++

on:
  push:
    paths:
      - ".github/workflows/oneapi-windows.yml"
      - ".github/workflows/oneapi_install_windows.bat"
      - ".github/workflows/oneapi_run_windows.bat"
      - ".github/workflows/oneapi_cache_exclude_windows.bat"
  schedule:
    - cron: '25 10 6 * *'


jobs:

  windows-oneapi:
    timeout-minutes: 60
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - run: pip install ninja

    # - name: cache install oneAPI
    #   timeout-minutes: 10
    #   id: cache-install
    #   uses: actions/cache@v3
    #   with:
    #     path: |
    #       C:\Program Files (x86)\Intel\oneAPI\setvars.bat
    #       C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat
    #       C:\Program Files (x86)\Intel\oneAPI\compiler
    #       C:\Program Files (x86)\Intel\oneAPI\mkl
    #       C:\Program Files (x86)\Intel\oneAPI\mpi
    #     key: install-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_CPP_COMPONENTS }}-${{ env.WINDOWS_FORTRAN_COMPONENTS }}-${{ env.WINDOWS_MKL_COMPONENTS }}
    # NOTE: cache recovers oneAPI, but the setvars.bat doesn't actually find oneAPI (does find Visual Studio).
    # cache@v2 and cache@v3 have the same behavior.
    # Thus we run monthly till we figure out cache.

    - name: no-cache install oneAPI
      timeout-minutes: 40
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: |
        ./.github/workflows/oneapi_install_windows.bat ${{ env.WINDOWS_BASEKIT_URL }} "${{ env.WINDOWS_MKL_COMPONENTS }}"
        ./.github/workflows/oneapi_install_windows.bat ${{ env.WINDOWS_HPCKIT_URL }} "${{ env.WINDOWS_CPP_COMPONENTS }}:${{ env.WINDOWS_FORTRAN_COMPONENTS }}:${{ env.WINDOWS_MPI_COMPONENTS }}"

    - name: "Batch workaround: config, build, test"
      shell: cmd
      run: ".github\\workflows\\oneapi_run_windows.bat"

    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: .github/workflows/oneapi_cache_exclude_windows.ps1
